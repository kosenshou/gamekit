using System;using UnityEngine;public class FGLEnhance_Callbacks : MonoBehaviour{    public static string CallbackObjectName;    public static Action<FGLEnhance.RewardType, int> OnRewardGrantedCallback = null;    public static Action OnRewardDeclinedCallback = null;    public static Action OnRewardUnavailableCallback = null;    void Awake()    {        DontDestroyOnLoad(this);        CallbackObjectName = gameObject.name;    }    public void EnhanceOnCoinsRewardGranted(string rewardAmount)    {        Debug.Log(string.Format("[Enhance] EnhanceOnCoinsRewardGranted({0})", rewardAmount));        if (OnRewardGrantedCallback != null)            OnRewardGrantedCallback(FGLEnhance.RewardType.REWARDTYPE_COINS, int.Parse(rewardAmount));    }    public void EnhanceOnItemRewardGranted(string empty)    {        Debug.Log("[Enhance] EnhanceOnItemRewardGranted");        if (OnRewardGrantedCallback != null)            OnRewardGrantedCallback(FGLEnhance.RewardType.REWARDTYPE_ITEM, 0);    }    public void EnhanceOnRewardDeclined(string empty)    {        Debug.Log("[Enhance] EnhanceOnRewardDeclined");        if (OnRewardDeclinedCallback != null)            OnRewardDeclinedCallback();    }    public void EnhanceOnRewardUnavailable(string empty)    {        Debug.Log("[Enhance] EnhanceOnRewardUnavailable");        if (OnRewardUnavailableCallback != null)            OnRewardUnavailableCallback();    }}